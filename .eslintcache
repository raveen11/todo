[{"F:\\assignment3\\src\\index.js":"1","F:\\assignment3\\src\\reportWebVitals.js":"2","F:\\assignment3\\src\\App.js":"3","F:\\assignment3\\src\\components\\Todo.js":"4","F:\\assignment3\\src\\components\\TodoList.js":"5"},{"size":500,"mtime":1609214790532,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":857,"mtime":1609238031355,"results":"9","hashOfConfig":"7"},{"size":2331,"mtime":1609228862116,"results":"10","hashOfConfig":"7"},{"size":3584,"mtime":1609249546251,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"g6k5d8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"F:\\assignment3\\src\\index.js",[],["25","26"],"F:\\assignment3\\src\\reportWebVitals.js",[],"F:\\assignment3\\src\\App.js",["27"],"\nimport React, { Component } from 'react';\nimport './App.css';\nimport Todo from './components/Todo';\nimport TodoList from './components/TodoList';\nimport firebase from 'firebase'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n  }\n\n initFireBase=()=>{\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBBS4zOZY5-RLqqqhE5xxknEzwRnOL2tfU\",\n    authDomain: \"todo-b12c7.firebaseapp.com\",\n    projectId: \"todo-b12c7\",\n    storageBucket: \"todo-b12c7.appspot.com\",\n    messagingSenderId: \"902002879409\",\n    appId: \"1:902002879409:web:80d1eb9c4df9a4cde6eb90\",\n    measurementId: \"G-P1MJE0MGCT\"\n  };\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n } \n\n\ncomponentDidMount(){\n    this.initFireBase();\n}\n\n  render() {\n    return (\n      <div>\n        <Todo/>\n        <TodoList/>\n      </div>\n    );\n  }\n}\n\nexport default App;","F:\\assignment3\\src\\components\\Todo.js",[],"F:\\assignment3\\src\\components\\TodoList.js",["28","29","30","31"],"import React,{useEffect,useState} from 'react'\r\nimport firebase from 'firebase'\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\nimport './Todo.css'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n \r\n\r\nexport default function TodoList() {\r\n    const[list,setList]=useState();\r\n    const[itemId,setItemId]=useState();\r\n    const [modalIsOpen,setIsOpen] =useState(false);\r\n    const [update,setUpdate] =useState();\r\n    const openModal=(id)=> {\r\n      setIsOpen(true);\r\n      setItemId(id);\r\n      }\r\n   \r\n   \r\n    function closeModal(){\r\n      setIsOpen(false);\r\n    }\r\n\r\n    const handleUpdateChange=(event)=>{\r\n      setUpdate(event.target.value)\r\n    }\r\n\r\n    const updateBtn=()=>{\r\n      \r\n      firebase.firestore().collection(\"todo-app\").doc(itemId).set({\r\n        text:update\r\n       });\r\n       \r\n       setIsOpen(false);\r\n       userFeedback();\r\n      \r\n    }\r\n;\r\n    \r\n    const getListData=async()=>{\r\n        const firestore=firebase.firestore();\r\n        const snapshot=await firestore.collection(\"todo-app\").get();\r\n        return snapshot.docs.map(doc=>doc)\r\n    }\r\n    useEffect(()=>{\r\n      userFeedback();\r\n    },[true])\r\n    const userFeedback=()=>{\r\n        getListData().then(function(data){\r\n            setList(data)\r\n        })\r\n    }\r\n\r\n    let listingobject;\r\n    if(list){\r\n        listingobject=list.map((item,index)=>\r\n                <div className=\"card\" key={index}>\r\n                  <div>\r\n                    <div className=\"text\">{item.data().text}</div>\r\n                    <span className=\"btns\">\r\n                       <IconButton aria-label=\"delete\">\r\n                         <DeleteIcon fontSize=\"large\"  onClick={()=>onDeletedItem(item.id)} />\r\n                      </IconButton>\r\n                      <Button variant=\"outlined\"onClick={()=>openModal(item.id)} color=\"primary\">\r\n                          Edit\r\n                      </Button>\r\n                  </span>\r\n\r\n                  \r\n                </div>\r\n                </div>\r\n        \r\n        )\r\n    }\r\n\r\n    const onDeletedItem=(id)=>{\r\n        console.log(id)\r\n        setItemId(id)\r\n        firebase.firestore().collection(\"todo-app\").doc(\"/\"+itemId).delete().then(function() {\r\n            \r\n            alert(\"Document successfully deleted!\",itemId);\r\n            userFeedback();\r\n        }).catch(function(error) {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n        \r\n    }\r\n    const customStyles = {\r\n        content : {\r\n          top                   : '50%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          marginRight           : '-50%',\r\n          transform             : 'translate(-50%, -50%)'\r\n        }\r\n      };\r\n    return (\r\n        <div>\r\n          <h1 style={{textAlign:'center'}}>Your Todo List !!</h1>\r\n            {listingobject}\r\n      \r\n            <Modal\r\n          isOpen={modalIsOpen}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n \r\n          <button onClick={closeModal}>close</button>\r\n          <div>I am a modal</div>\r\n          <form>\r\n            <input value={update} onChange={handleUpdateChange} />\r\n            <button onClick={updateBtn}>Update</button>\r\n          </form>\r\n        </Modal>\r\n      \r\n      \r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":10,"column":3,"nodeType":"38","messageId":"39","endLine":12,"endColumn":4},{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":8,"column":10,"nodeType":"42","messageId":"43","endLine":8,"endColumn":20},{"ruleId":"45","severity":1,"message":"46","line":52,"column":7,"nodeType":"47","endLine":52,"endColumn":13,"suggestions":"48"},{"ruleId":"45","severity":1,"message":"49","line":52,"column":8,"nodeType":"50","endLine":52,"endColumn":12},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userFeedback'. Either include it or remove the dependency array.","ArrayExpression",["53"],"The true literal is not a valid dependency because it never changes. You can safely remove it.","Literal","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [userFeedback]",{"range":"56","text":"57"},[1321,1327],"[userFeedback]"]